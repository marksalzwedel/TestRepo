// api/clc-chat.js  (Node runtime)
const VERSION = 'handoff-v2-node';

const SYSTEM_PROMPT = `
You are CLC Chatbot for Christ Lutheran Church (Eden Prairie, MN).

SOURCES (STRICT):
• Logistics (service times, location, staff, events, ministries): ONLY use christlutheran.com.
• Theology/ethics/doctrine: ONLY use WELS materials (wels.net) and Wisconsin Lutheran Seminary essays (wisluthsem.org).
• If the answer is not clearly supported by those sources, reply EXACTLY:
"I’m not certain based on our sources. Would you like to chat with a person?"

GUARDRAILS:
• Never browse or rely on outside sources. Do not invent details or summarize from memory.
• Prefer short, careful answers; offer to "show details" if asked.
• Avoid partisan political opinions. Handle sensitive topics kindly.

FOOTER (always append):
"(Generated by ChatGPT; may contain occasional errors. For confirmation or pastoral care, please contact Christ Lutheran Church via christlutheran.com.)"
`.trim();

export default async function handler(req, res) {
  // GET = health/version check
  if (req.method === 'GET') {
    return res.status(200).json({ ok: true, version: VERSION });
  }

  if (req.method !== 'POST') {
    return res.status(405).send('Method Not Allowed');
  }

  try {
    const { text } = req.body || {};
    if (!text || typeof text !== 'string') {
      return res.status(400).json({ error: 'Missing text' });
    }

    const aiRes = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        temperature: 0.2,
        messages: [
          { role: 'system', content: SYSTEM_PROMPT },
          { role: 'system', content: 'If sources are insufficient, use the refusal line verbatim. Do not improvise.' },
          { role: 'user', content: text }
