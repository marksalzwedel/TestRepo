export default async function handler(req, res) {
  if (req.method !== 'POST') return res.status(405).send('Method Not Allowed');

  const SYSTEM_PROMPT = `
You are CLC Chatbot for Christ Lutheran Church (Eden Prairie, MN).
For logistics (service times, location, staff, events, ministries), use ONLY content from christlutheran.com.
For theology/ethics, use ONLY WELS materials (wels.net) and Wisconsin Lutheran Seminary essays (wisluthsem.org).
If unsure, warmly suggest contacting Pastor Josh Olson via christlutheran.com (office phone or contact form).
Tone: brief, warm, respectful. Avoid partisan political opinions. Handle sensitive topics kindly.
Always append:
"(Generated by ChatGPT; may contain occasional errors. For confirmation or pastoral care, please contact Christ Lutheran Church via christlutheran.com.)"
  `.trim();

  try {
    const { text } = req.body || {};
    if (!text || typeof text !== 'string') {
      return res.status(400).json({ error: 'Missing text' });
    }

    const aiRes = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        model: 'gpt-4o-mini',
        temperature: 0.3,
        messages: [
          { role: 'system', content: SYSTEM_PROMPT },
          { role: 'user', content: text }
        ]
      })
    });

    if (!aiRes.ok) {
      const details = await aiRes.text();
      return res.status(502).json({ error: 'OpenAI error', details });
    }

    const data = await aiRes.json();
    const reply = data?.choices?.[0]?.message?.content?.trim() || 'Sorryâ€”I could not find that.';
    res.status(200).json({ reply });
  } catch (e) {
    res.status(500).json({ error: 'Server error' });
  }
}
